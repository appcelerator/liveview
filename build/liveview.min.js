(function(a){function b(){return this instanceof b?void(this.title='titanium',this.version='',this.moduleLoadList=[],this.versions={},this.arch=Ti.Platform.architecture,this.platform=Ti.Platform.osname,this.hardware=(''+Ti.Platform.model).replace('google_')):new b}function c(a){if(a)return d(a)}function d(a){for(const b in c.prototype)a[b]=c.prototype[b];return a}function e(a){return this instanceof e?void(a=a||{},this.timeout=5e3,this.host=a.host,this.port=a.port,this.retry=a.retry,this.bytesRead=0,this.bytesWritten=0,this.ignore=[]):new e(a)}function f(a){this.filename=a+'.js',this.id=a,this.platform='ipad'===h.platform?'iphone':'windowsphone'===h.platform||'windowsstore'===h.platform?'windows':h.platform,this.exports={},this.loaded=!1}Object.setPrototypeOf(b.prototype,c.prototype),c.prototype.on=function(a,b){return this._callbacks=this._callbacks||{},(this._callbacks[a]=this._callbacks[a]||[]).push(b),this},c.prototype.once=function(a,b){function c(){d.off(a,c),b.apply(this,arguments)}const d=this;return this._callbacks=this._callbacks||{},b._off=c,this.on(a,c),this},c.prototype.off=function(a,b){this._callbacks=this._callbacks||{};let c=this._callbacks[a];if(!c)return this;if(1===arguments.length)return delete this._callbacks[a],this;const d=c.indexOf(b._off||b);return~d&&c.splice(d,1),this},c.prototype.emit=function(a){this._callbacks=this._callbacks||{};const b=[].slice.call(arguments,1);let c=this._callbacks[a];if(c){c=c.slice(0);for(let a=0,d=c.length;a<d;++a)c[a].apply(this,b)}return this},c.prototype.listeners=function(a){return this._callbacks=this._callbacks||{},this._callbacks[a]||[]},c.prototype.hasListeners=function(a){return!!this.listeners(a).length},'undefined'!=typeof module&&(module.exports=e),Object.setPrototypeOf(e.prototype,c.prototype),e.prototype.connect=function(a,b){a=a||{},'function'==typeof a&&(b=a,a={});const c=this;c.host=a.host||c.host||'127.0.0.1',c.port=a.port||c.port,c.retry=a.retry||c.retry;const d=!!a.reConnect;this._proxy=Ti.Network.Socket.createTCP({host:c.host,port:c.port,connected:function(a){c.connected=!0,c._connection=a.socket,b&&b(a),c.emit(d?'reconnect':'connect',a),Ti.Stream.pump(a.socket,function(a){return 0>a.bytesProcessed||!!a.errorStatus?(c._proxy.close(),void c.close(!0)):void c.emit('data',''+a.buffer)},1024,!0)},error:function(a){const b={code:a.errorCode,error:a.error};return~c.ignore.indexOf(b.code)?void c.emit('error ignored',b):c.emit('error',b)}}),this._proxy.connect()},e.prototype.close=function(a){const b=this;if(b.connected=!1,b.closing=!a,b.closing)return void b.write(function(){b._proxy.close(),b.emit('close')});const c=~~b.retry;b.emit('end'),c&&setTimeout(function(){b.emit('reconnecting'),b.connect({reConnect:!0})},c)},e.prototype.write=function(a,b){'function'==typeof a&&(b=a,a=null),a=a?''+a:'';const c=Ti.createBuffer({value:a}),d=b||function(){};Ti.Stream.write(this._connection,c,function(){d([].slice(arguments))})},e.prototype.setKeepAlive=function(a,b){const c=this;return a?void(c._keepAlive=setInterval(function(){c.write('ping')},b||3e5)):(c._keepAlive&&clearInterval(c._keepAlive),void(c._keepAlive=null))};var g,h;g=f._global=f.global={},h=g.process=new b,g.ENV='liveview',g.logging=!1,g.CATCH_ERRORS=!0,f._cache={},f._requireNative=function(){throw new Error('Module.patch must be run first')},f._includeNative=function(){throw new Error('Module.patch must be run first')},f.patch=function(a,b,c){const d='android'===h.platform&&'sdk'===h.hardware?'10.0.2.2':'Simulator'===Ti.Platform.model?'127.0.0.1':'FSERVER_HOST';f._globalCtx=a,g._globalCtx=a,f._url=b||d,f._port=parseInt(c,10)||8324,f._requireNative=a.require,f.evtServer&&f.evtServer.close();try{Ti.App.Properties.setBool('ti.android.bug2373.finishfalseroot',!1)}catch(a){}a.localeStrings=f.require('localeStrings'),a.L=function(b,c){return(a.localeStrings[Ti.Locale.currentLanguage]||{})[b]||c||b},f.connectServer()},f.global.reload=function(){try{f.evtServer._proxy.close(),console.log('[LiveView] Reloading App'),Ti.App._restart()}catch(a){console.log('[LiveView] Reloading App via Legacy Method'),f.require('app')}},f.connectServer=function(){let a=null;const b=f.evtServer=new e({host:f._url,port:parseInt('ESERVER_PORT',10)},function(){console.log('[LiveView]','Connected to Event Server')});b.on('close',function(){console.log('[LiveView]','Closed Previous Event Server client')}),b.on('connect',function(){a&&(clearInterval(a),console.log('[LiveView]','Reconnected to Event Server'))}),b.on('data',function(a){if(a)try{const b=JSON.parse(''+a);'event'===b.type&&'reload'===b.name&&(f._cache={},f.global.reload())}catch(a){}}),b.on('end',function(){console.error('[LiveView]','Disconnected from Event Server'),a=setInterval(function(){console.log('[LiveView]','Attempting reconnect to Event Server'),b.connect()},2e3)}),b.on('error',function(a){let b=a.error;const c=~~a.code;throw 61==c&&(b='Event Server unavailable. Connection Refused @ '+f._url+':'+f._port+'\n[LiveView] Please ensure your device and computer are on the same network and the port is not blocked.'),new Error('[LiveView] '+b)}),b.connect(),f.require('app')},f.include=function(a,b){const c=b.replace('.js',''),d=f.prototype._getRemoteSource(c,1e4);eval.call(a,d)},f.require=function(a){let b=a;const c=f.getCached(b);if(c)return c.exports;if(!f.exists(b)){const c='/hyperloop/';-1!==b.indexOf('.*')&&(b=a.slice(0,a.length-2));const d=b.toLowerCase();if(f.exists(c+b))b=c+b;else if(f.exists(c+d))b=c+d;else if(-1===b.indexOf('.')&&f.exists(c+b+'/'+b))b=c+b+'/'+b;else if(-1===b.indexOf('.')&&f.exists(c+d+'/'+d))b=c+d+'/'+d;else{const a=b.lastIndexOf('.'),d=c+b.slice(0,a)+'$'+b.slice(a+1);f.exists(b)&&(b=d)}}const d=new f(b);for(d.cache(),d._compile();!d.loaded;);return d.exports},f.getCached=function(a){return f._cache[a]},f.exists=function(a){const b=Ti.Filesystem.resourcesDirectory+a+'.js',c=Ti.Filesystem.getFile(b);if(c.exists())return!0;if(!this.platform)return!1;const d=Ti.Filesystem.resourcesDirectory+'/'+this.platform+'/'+a+'.js',e=Ti.Filesystem.getFile(d);return e.exists()},f.prototype._getRemoteSource=function(a,b){const c=new Date().getTime()+b,d=Ti.Network.createHTTPClient();let e=null,g=!1;const h='http://'+f._url+':'+f._port+'/'+(a||this.id)+'.js';for(d.cache=!1,d.open('GET',h),d.setRequestHeader('x-platform',this.platform),d.send();!g;)if(4===d.readyState||404===d.status)e=200===d.status&&d.responseText,g=!0;else if(0>=c-new Date().getTime())throw e=!1,g=!0,new Error('[LiveView] File Server unavailable. Host Unreachable @ '+f._url+':'+f._port+'\n[LiveView] Please ensure your device and computer are on the same network and the port is not blocked.');return e},f.prototype._getSource=function(){let a=this.id;const b=/^(http|https)$/.test(a)||'liveview'===g.ENV;if(b)return this._getRemoteSource(null,1e4);'app'===a&&(a='_app');const c=Ti.Filesystem.getFile(Ti.Filesystem.resourcesDirectory,a+'.js');return(c.read()||{}).text},f._wrap=function(a){return a=a.replace(/T[i||itanium]+.include\(['|"]([^"'\r\n$]*)['|"]\)/g,function(a,b){const c=(''+b).replace('.js',''),d=f.prototype._getRemoteSource(c,1e4),e='try{ '+d.replace(/\/\/(.*)$/gm,'').replace(/\n/g,'')+'}catch(err){ lvGlobal.process.emit("uncaughtException", {module: "'+b+'", error: err})}';return e}),g.CATCH_ERRORS?f._errWrapper[0]+a+f._errWrapper[1]:a},f._errWrapper=['try {','} catch (err) { lvGlobal.process.emit("uncaughtException", {module: __filename, error: err, source: module.source})}'],f.prototype._compile=function(){const a=this._getSource();if(!a)return this.exports=f._requireNative(this.id),void(this.loaded=!0);this.source=f._wrap(a);try{const a=new Function('exports, require, module, __filename, __dirname, lvGlobal',this.source);a(this.exports,f.require,this,this.filename,this.__dirname,g)}catch(a){h.emit('uncaughtException',{module:this.id,error:a,source:(''+this.source).split('\n')})}this.loaded=!0},f.prototype.cache=function(){this.timestamp=new Date().getTime(),f._cache[this.id]=this},h.on('uncaughtException',function(a){console.log('[LiveView] Error Evaluating',a.module,'@ Line:',a.error.line),console.error(''+a.error),console.error('File:',a.module),console.error('Line:',a.error.line),console.error('SourceId:',a.error.sourceId),console.error('Backtrace:\n',(''+a.error.backtrace).replace(/'\n'/g,'\n'))}),f.patch(a,'FSERVER_HOST','FSERVER_PORT'),Titanium.App.idleTimerDisabled=!0})(this);