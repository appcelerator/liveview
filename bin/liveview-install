#!/usr/bin/env node
'use strict';
const program = require('commander'),
	chalk = require('chalk'),
	path = require('path'),
	{ green, red, white, yellow } = chalk;
// inject shelljs to the global scope
/* globals exec */
require('shelljs/global');

/**
 * no-op on unknown options handling
 */
program.Command.prototype.unknownOption = function () {};

// usage
program.usage('install <name> [options]');

// examples
program.on('--help', function () {
	console.log('  Examples:');
	console.log();
	console.log('    # install cli hook');
	console.log('    $ liveview install clihook');
	console.log();
});

// parse argv
program.parse(process.argv);

// package
const pkg = program.args.shift();
if ((pkg || '').toLowerCase() === 'clihook') {
	installHook();
}

/**
 * Installs the Titanium CLI hook for Liveview (if not already installed)
 * @returns {undefined}
 */
function installHook() {
	const hook = path.join(__dirname, '../hook').replace(/\s/g, '\\ '),
		ticonf = JSON.parse(exec('titanium config -o json', { silent: true }).output);

	if (~ticonf['paths.hooks'].indexOf(hook)) {
		return console.log(`${white(' Titanium CLI Hook')} ${yellow('already installed\n')}`);
	}

	exec('liveview server stop --no-banner');
	exec('titanium -q config paths.hooks -a ' + hook, function (res) {
		const outcome = (res.code) ? red('not installed') : green('installed');
		console.log(` Titanium CLI Hook ${outcome} \n`);
	});
}
