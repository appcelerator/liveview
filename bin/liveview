#!/usr/bin/env node
/**
 *   Appcelerator Titanium Live Reload Development Tool
 */
var program = require('commander'),
	spawn = require('win-fork'),
	path = require('path'),
	fs = require('fs'),
	join = path.join,
	exists = fs.existsSync,
	pkgConf = require('../package'),
	args,
	cmd,
	bin,
	local,
	proc;

require('shelljs/global');

// usage
program
	.version(pkgConf.version)
	.usage('<command> [options]')
	.option('--no-banner', 'disable program banner output')
	.option('--no-colors', 'disable program cli color output');

// sub-command help
program.on('--help', function () {
	console.log('  Commands:');
	console.log();
	console.log('    run [flags...]      build project with live updates');
	console.log('    install <name>      install components');
	console.log('    rm <name>           remove components');
	console.log('    server [options]    file/event server');
	console.log();
	process.exit();
});

// parse argv
program.parse(process.argv);

if (program.banner) {
	console.log(' ');
	console.log(' LiveView, Realtime App Development, version ' + pkgConf.version);
	console.log(' Copyright (c) 2013, Appcelerator, Inc.  All Rights Reserved.'.grey);
	console.log(' Please report bugs to'.grey, 'http://jira.appcelerator.org/\n'.blue);
}

// args void of cmd
args = process.argv.slice(3);

// command
cmd = (program.args[0] || '').toLowerCase();

// alias "build" as "run"
if (cmd === 'build') {
	cmd = 'run';
}

// alias "rm" as "remove"
if (cmd === 'remove') {
	cmd = 'rm';
}

// display help
if (!cmd) {
	process.stdout.write(program.helpInformation());
	program.emit('--help');
	process.exit();
}

// executable
bin = 'liveview-' + cmd;

// local
local = join(__dirname, bin);
if (exists(local)) {
	bin = local;
}

// spawn
proc = spawn(bin, args, { stdio: 'inherit' });

// catch invalid commands
proc.on('error', function () {
	console.log('  [ERROR]'.red + ' invalid command: '.red + cmd);
	process.stdout.write(program.helpInformation());
	program.emit('--help');
	process.exit();
});
