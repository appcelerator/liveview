#!/usr/bin/env node

/**
 *   Appcelerator Titanium Live Reload Development Tool
 */

/**
 * Module dependencies.
 */

require('shelljs/global');

var program = require('commander')
  , colors = require('coloring')
  , spawn = require('win-fork')
  , path = require('path')
  , fs = require('fs')
  , join = path.join
  , exists = fs.existsSync
  , pkgConf = require('../package')
  , debug = require('debug')('liveview:cli');

// usage

program
  .version(pkgConf.version)
  .option('--no-banner', 'do not display LiveView Banner')
  .usage('<command> [options]');

// sub-command help

program.on('--help', function(){
  console.log('  Commands:');
  console.log();
  console.log('    run [flags...]      build project in live mode');
  console.log('    install <name>      install liveview components');
  console.log('    rm <name>           remove liveview components');
  console.log();
  process.exit();
});

// parse argv

program.parse(process.argv);

if (program.banner) {
  console.log(' ');
  console.log(' liveview, Titanium Live file runner, version '+ pkgConf.version);
  console.log(' Copyright (c) 2013, Appcelerator, Inc.  All Rights Reserved.\n'.grey);
  console.log(' Please report bugs to'.grey, 'http://jira.appcelerator.org/\n'.blue);
}

// args void of cmd

var args = process.argv.slice(3);

// command

var cmd = (program.args[0]||'').toLowerCase();

// alias "build" as "run"

if ('build' === cmd) { cmd = 'run'; }

// alias "rm" as "remove"

if ('remove' === cmd) { cmd = 'rm'; }

// display help

if (!cmd) {
  process.stdout.write(program.helpInformation());
  program.emit('--help');
  process.exit();
}

// executable

var bin = 'liveview-' + cmd;

// local

var local = join(__dirname, bin);
if (exists(local)) { bin = local; }

// spawn

var proc = spawn(bin, args, { stdio: 'inherit' });

// catch invalid commands

proc.on('error', function () {
  console.log('  [ERROR]'.red + ' invalid command: '.red + cmd);
  process.stdout.write(program.helpInformation());
  program.emit('--help');
  process.exit();
});